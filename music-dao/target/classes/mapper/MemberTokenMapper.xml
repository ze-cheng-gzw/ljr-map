<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.MemberTokenMapper">
  <resultMap id="BaseResultMap" type="com.demo.entity.MemberToken">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="member_type" jdbcType="INTEGER" property="memberType" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, member_id, token, member_type, update_time, expire_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_member_token
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectByTokenAndMemberType" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from tb_member_token
      where member_type = #{memberType} and token = #{token}
    </select>
  <select id="selectByMemberIdAndMemberType" resultType="com.demo.entity.MemberToken">
    select
    <include refid="Base_Column_List" />
    from tb_member_token
    where member_id = #{memberId} and token = #{token}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_member_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.demo.entity.MemberToken">
    insert into tb_member_token (id, member_id, token, 
      member_type, update_time, expire_time
      )
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{memberType,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{expireTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.entity.MemberToken">
    insert into tb_member_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="memberType != null">
        member_type,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="memberType != null">
        #{memberType,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.entity.MemberToken">
    update tb_member_token
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="memberType != null">
        member_type = #{memberType,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.entity.MemberToken">
    update tb_member_token
    set member_id = #{memberId,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      member_type = #{memberType,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      expire_time = #{expireTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>