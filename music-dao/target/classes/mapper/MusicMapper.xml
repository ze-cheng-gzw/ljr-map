<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.MusicMapper">
  <resultMap id="BaseResultMap" type="com.demo.entity.Music">
    <id column="music_id" jdbcType="BIGINT" property="musicId" />
    <result column="music_name" jdbcType="VARCHAR" property="musicName" />
    <result column="singer_id" jdbcType="BIGINT" property="singerId" />
    <result column="album_id" jdbcType="BIGINT" property="albumId" />
    <result column="cover_url" jdbcType="VARCHAR" property="coverUrl" />
    <result column="to_vip" jdbcType="INTEGER" property="toVip" />
    <result column="music_url" jdbcType="VARCHAR" property="musicUrl" />
    <result column="music_lyrics" jdbcType="VARCHAR" property="musicLyrics" />
    <result column="music_time_length" jdbcType="VARCHAR" property="musicTimeLength" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    music_id, music_name, singer_id, album_id, cover_url, to_vip, music_url, music_lyrics, 
    music_time_length, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_music
    where music_id = #{musicId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_music
    where music_id = #{musicId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.demo.entity.Music">
    insert into tb_music (music_id, music_name, singer_id, 
      album_id, cover_url, to_vip, 
      music_url, music_lyrics, music_time_length, 
      create_time)
    values (#{musicId,jdbcType=BIGINT}, #{musicName,jdbcType=VARCHAR}, #{singerId,jdbcType=BIGINT}, 
      #{albumId,jdbcType=BIGINT}, #{coverUrl,jdbcType=VARCHAR}, #{toVip,jdbcType=INTEGER}, 
      #{musicUrl,jdbcType=VARCHAR}, #{musicLyrics,jdbcType=VARCHAR}, #{musicTimeLength,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.entity.Music">
    insert into tb_music
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="musicId != null">
        music_id,
      </if>
      <if test="musicName != null">
        music_name,
      </if>
      <if test="singerId != null">
        singer_id,
      </if>
      <if test="albumId != null">
        album_id,
      </if>
      <if test="coverUrl != null">
        cover_url,
      </if>
      <if test="toVip != null">
        to_vip,
      </if>
      <if test="musicUrl != null">
        music_url,
      </if>
      <if test="musicLyrics != null">
        music_lyrics,
      </if>
      <if test="musicTimeLength != null">
        music_time_length,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="musicId != null">
        #{musicId,jdbcType=BIGINT},
      </if>
      <if test="musicName != null">
        #{musicName,jdbcType=VARCHAR},
      </if>
      <if test="singerId != null">
        #{singerId,jdbcType=BIGINT},
      </if>
      <if test="albumId != null">
        #{albumId,jdbcType=BIGINT},
      </if>
      <if test="coverUrl != null">
        #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="toVip != null">
        #{toVip,jdbcType=INTEGER},
      </if>
      <if test="musicUrl != null">
        #{musicUrl,jdbcType=VARCHAR},
      </if>
      <if test="musicLyrics != null">
        #{musicLyrics,jdbcType=VARCHAR},
      </if>
      <if test="musicTimeLength != null">
        #{musicTimeLength,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
    <insert id="addMusicList" parameterType="java.util.List">
        insert into tb_music(music_id, music_name, singer_id, album_id, cover_url, to_vip, music_url, music_lyrics, music_time_length) values
      <foreach collection= "musics" item="music" index="index" separator=",">
      (
      #{music.musicId},#{music.musicName},#{music.singerId},#{music.albumId},#{music.coverUrl},
        #{music.toVip},#{music.musicUrl},#{music.musicLyrics},#{music.musicTimeLength}
        )
      </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.demo.entity.Music">
    update tb_music
    <set>
      <if test="musicName != null">
        music_name = #{musicName,jdbcType=VARCHAR},
      </if>
      <if test="singerId != null">
        singer_id = #{singerId,jdbcType=BIGINT},
      </if>
      <if test="albumId != null">
        album_id = #{albumId,jdbcType=BIGINT},
      </if>
      <if test="coverUrl != null">
        cover_url = #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="toVip != null">
        to_vip = #{toVip,jdbcType=INTEGER},
      </if>
      <if test="musicUrl != null">
        music_url = #{musicUrl,jdbcType=VARCHAR},
      </if>
      <if test="musicLyrics != null">
        music_lyrics = #{musicLyrics,jdbcType=VARCHAR},
      </if>
      <if test="musicTimeLength != null">
        music_time_length = #{musicTimeLength,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where music_id = #{musicId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.entity.Music">
    update tb_music
    set music_name = #{musicName,jdbcType=VARCHAR},
      singer_id = #{singerId,jdbcType=BIGINT},
      album_id = #{albumId,jdbcType=BIGINT},
      cover_url = #{coverUrl,jdbcType=VARCHAR},
      to_vip = #{toVip,jdbcType=INTEGER},
      music_url = #{musicUrl,jdbcType=VARCHAR},
      music_lyrics = #{musicLyrics,jdbcType=VARCHAR},
      music_time_length = #{musicTimeLength,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where music_id = #{musicId,jdbcType=BIGINT}
  </update>
</mapper>