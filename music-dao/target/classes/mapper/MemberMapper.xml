<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="com.demo.entity.Member">
    <id column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_mobile" jdbcType="VARCHAR" property="memberMobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="password_salt" jdbcType="VARCHAR" property="passwordSalt" />
    <result column="vip_level" jdbcType="INTEGER" property="vipLevel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    member_id, member_name, member_mobile, password, password_salt, vip_level, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_member
    where member_id = #{memberId,jdbcType=BIGINT}
  </select>
  <select id="getMemberByMobile" resultType="com.demo.entity.Member">
    select
    <include refid="Base_Column_List" />
    from tb_member
    where member_mobile = #{loginName}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_member
    where member_id = #{memberId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.demo.entity.Member">
    insert into tb_member (member_id, member_name, member_mobile, 
      password, password_salt, vip_level, 
      create_time)
    values (#{memberId,jdbcType=BIGINT}, #{memberName,jdbcType=VARCHAR}, #{memberMobile,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{passwordSalt,jdbcType=VARCHAR}, #{vipLevel,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.entity.Member">
    insert into tb_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="memberMobile != null">
        member_mobile,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="passwordSalt != null">
        password_salt,
      </if>
      <if test="vipLevel != null">
        vip_level,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberMobile != null">
        #{memberMobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="vipLevel != null">
        #{vipLevel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.entity.Member">
    update tb_member
    <set>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberMobile != null">
        member_mobile = #{memberMobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        password_salt = #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="vipLevel != null">
        vip_level = #{vipLevel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.entity.Member">
    update tb_member
    set member_name = #{memberName,jdbcType=VARCHAR},
      member_mobile = #{memberMobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      password_salt = #{passwordSalt,jdbcType=VARCHAR},
      vip_level = #{vipLevel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
</mapper>